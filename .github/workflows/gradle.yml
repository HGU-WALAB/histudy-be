# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Apply configuration
        run: |
          mkdir $GITHUB_WORKSPACE/src/main/resources
          echo "${{ secrets.APP_CONFIG }}" > ./src/main/resources/application.yml

      - name: Set JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Run Tests
        run: ./gradlew test

      - name: Trigger Deploy Script on Remote Server
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/key.pem
          ssh-keyscan -t rsa "$SSH_HOST" >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/key.pem $SSH_USER@$SSH_HOST "./deploy.sh"
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
      
